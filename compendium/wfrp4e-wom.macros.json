{
	"label": "Macros (Vientos de la Magia)",
	"entries": [
		{
			"id": "Generate Random Grimoire",
			"name": "Generar Grimorio aleatorio",
			"command": "let type = game.wfrp4e.tables.findTable(\"random-grimoire\", \"type\")\n        let spells = game.wfrp4e.tables.findTable(\"random-grimoire\", \"spells\")\n        let cn = game.wfrp4e.tables.findTable(\"random-grimoire\", \"cn\")\n        let lore = game.wfrp4e.tables.findTable(\"random-grimoire\", \"lore\")\n        let characteristic1 = game.wfrp4e.tables.findTable(\"random-grimoire\", \"characteristic1\")\n        let characteristic2 = game.wfrp4e.tables.findTable(\"random-grimoire\", \"characteristic2\")\n\n        let typeResult = (await type.roll()).results[0].description\n        let spellsResult = (await spells.roll()).results[0].description\n        let cnResult = (await cn.roll()).results[0].description\n        let loreResult = (await lore.roll()).results[0].description\n        let characteristic1Result = (await characteristic1.roll()).results[0].description\n        let characteristic2Result = (await characteristic2.roll()).results[0].description\n\n        let item = Item.implementation.create(\n            {\n                type: \"trapping\",\n                name: \"Grimorio\",\n                img: \"modules/wfrp4e-core/icons/equipment/book_documents/basic-book-magic.png\",\n                system: {\n                    trappingType: {\n                        value: \"booksAndDocuments\",\n                    },\n                    encumbrance : { value : 1},\n                    description: {\n                        value: `\n                        <p><strong>Tipo</strong>: ${typeResult}</p>\n                        <p><strong>Hechizos</strong>: ${spellsResult}</p>\n                        <p><strong>NL m\u00E1x.</strong>: ${cnResult}</p>\n                        <p><strong>Saber</strong>: ${loreResult}</p>\n                        <p>${characteristic1Result}</p>\n                        <p>${characteristic2Result}</p>\n                        `\n                    }\n                }\n            }, { renderSheet: true })"
		},
		{
			"id": "Generate Spell Scroll",
			"name": "Generar Pergamino de hechizo",
			"command": "let spells = await warhammer.utility.findAllItems(\"spell\")\n\n    let cnIndex = new Array(13).fill(undefined).map(i => [])\n\n    for(let spell of spells)\n    {\n        if (spell.system.cn.value <= 12)\n        {\n            cnIndex[spell.system.cn.value].push(spell)\n        }\n    }\n\n    let cnTable = game.wfrp4e.tables.findTable(\"scroll\", \"cn\")\n    let loreTable = game.wfrp4e.tables.findTable(\"scroll\", \"lore\")\n\n    let cn = Number((await cnTable.roll()).results[0].description)\n\n    let lore = (await loreTable.roll()).results[0].description\n\n    lore = Array.from(lore.matchAll(/{(.+?)}/gm))[0][1]\n\n    if (lore.includes(\"Magia del Caos\"))\n    {\n        lore = [\"Tzeentch\", \"Nurgle\", \"Slaanesh\", \"Sin dividir\"][Math.floor(CONFIG.Dice.randomUniform() * 4)]\n    }\n\n    let spellsWithLore = []\n    let searchCN = cn\n    while (spellsWithLore.length == 0)\n    {\n        let spellsWithCN = cnIndex[searchCN]\n        if (lore == \"Magia arcana\")\n        {\n            spellsWithLore = spellsWithCN.filter(i => !i.system.lore.value)\n        }\n        else \n            spellsWithLore = spellsWithCN.filter(i => game.wfrp4e.config.magicLores[i.system.lore.value] == lore)\n\n        if (searchCN == 0)\n            break;\n        else searchCN--\n    }\n\n\n    if (spellsWithLore.length > 0)\n    {\n        let selectedSpell = spellsWithLore[Math.floor(CONFIG.Dice.randomUniform() * spellsWithLore.length)]\n        let item = Item.implementation.create(\n            {\n                type : \"trapping\", \n                name : \"Pergamino de \" + selectedSpell.name, \n                img : selectedSpell.img,\n                system : {\n                    trappingType : {\n                        value : \"booksAndDocuments\",\n                    },\n                    description : {\n                        value : `<p>@UUID[${selectedSpell.uuid}]</p>`\n                    }\n                }}, {renderSheet : true})\n    }\n    else \n    {\n        ui.notifications.notify(`No se pudo encontrar hechizo de ${lore}: NL ${cn} o inferior. Int\u00E9ntelo otra vez`)\n    }"
		}
	]
}